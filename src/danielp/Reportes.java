/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package danielp;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aran
 */
public class Reportes extends javax.swing.JFrame {
DefaultTableModel model;
DefaultComboBoxModel  modeloC;
    /**
     * Creates new form Reportes
     */
    public Reportes() {
        initComponents();
        this.setVisible(true);
        this.setTitle("Reportes");
        silenciar();
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Listado de Facturas", "Listado de Existencias", "Listado de Clientes", "Listado de ingresos", "Listado de Proveedores", "Listado de Egresos", "Listado de Clientes con Mora", "Listado de Saldos ", "Listado de abonos", "Listado de cargos" }));

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton3.setText("Aceptar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jButton2.setText("regresar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jButton2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedIndex()==1){
            silenciar();
            Facturas();
           
        }else if(jComboBox1.getSelectedIndex()==2){
            silenciar();
            Existencias();
        }else if(jComboBox1.getSelectedIndex()==3){
            silenciar();
            Clientes();
        }else if(jComboBox1.getSelectedIndex()==4){
            silenciar();
            Ingresos();
        }else if(jComboBox1.getSelectedIndex()==5){
            silenciar();
            Proveedores();
        }else if(jComboBox1.getSelectedIndex()==6){
            
        }else if(jComboBox1.getSelectedIndex()==7){
            clientesMora();
        }else if(jComboBox1.getSelectedIndex()==8){
             aparecer();
        }else if(jComboBox1.getSelectedIndex()==9){
            
        }else if(jComboBox1.getSelectedIndex()==10){
            cargos();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
            Object cliente = jComboBox2.getSelectedItem();
            ClienteC c = (ClienteC)cliente;
            System.out.println(c.getId());
            Saldo_Presona(c.getId());
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void Facturas(){
     model =  new DefaultTableModel();
        model.addColumn("No. Factura");
        model.addColumn("Fecha");
        model.addColumn("Nit Cliente");
        
        jTable1.setModel(model);
        conexion c  = new conexion();
    
    String cargar[]= new String[3];

      try {
            String sql = "SELECT * FROM  factura";
            PreparedStatement ps = c.connectDb().prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            while(rs.next()){
                cargar[0]=rs.getString("idFactura");
                cargar[1]=rs.getString("fecha");
                cargar[2]=rs.getString("idCliente");
                
                
                model.addRow(cargar);
            }
            ps.close();
            ps=null;
            c.desconectar();
      } catch (Exception e) {
          System.out.println("Fallo metodo");
      }
      cargar[0]="";
      cargar[1]="";
      cargar[2]="";
      
      
      model.addRow(cargar);
      jTable1.setModel(model);
    
    
    }
    
    public void Existencias (){
     
    
        model =  new DefaultTableModel();
        model.addColumn("Id producto");
        model.addColumn("Producto");
        model.addColumn("Precio Venta");
        model.addColumn("Precio Compra");
        model.addColumn("Cantidad");
        jTable1.setModel(model);
        conexion c  = new conexion();
    
    String cargar[]= new String[5];

      try {
            String sql = "SELECT * FROM  producto";
            PreparedStatement ps = c.connectDb().prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            while(rs.next()){
                cargar[0]=rs.getString("idProducto");
                cargar[1]=rs.getString("nombre");
                cargar[2]=rs.getString("precioVenta");
                cargar[3]=rs.getString("precioCompra");
                cargar[4]=rs.getString("cantidad");
                
                model.addRow(cargar);
            }
            ps.close();
            ps=null;
            c.desconectar();
      } catch (Exception e) {
          System.out.println("Fallo metodo");
      }
      cargar[0]="";
      cargar[1]="";
      cargar[2]="";
      cargar[3]="";
      cargar[4]="";
      model.addRow(cargar);
      jTable1.setModel(model);
        
        
    
    }
    
    public void Clientes(){
          model =  new DefaultTableModel();
        model.addColumn("Nit Cliente");
        model.addColumn("Nombre");
        model.addColumn("Apellido");
        model.addColumn("Telefono");
        model.addColumn("Direcion");
        jTable1.setModel(model);
        conexion c  = new conexion();
    
    String cargar[]= new String[5];

      try {
            String sql = "SELECT * FROM  cliente";
            PreparedStatement ps = c.connectDb().prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            while(rs.next()){
                cargar[0]=rs.getString("idCliente");
                cargar[1]=rs.getString("nombre");
                cargar[2]=rs.getString("apellido");
                cargar[3]=rs.getString("telefono");
                cargar[4]=rs.getString("direccion");
                
                model.addRow(cargar);
            }
            ps.close();
            ps=null;
            c.desconectar();
      } catch (Exception e) {
          System.out.println("Fallo metodo");
      }
      cargar[0]="";
      cargar[1]="";
      cargar[2]="";
      cargar[3]="";
      cargar[4]="";
      model.addRow(cargar);
      jTable1.setModel(model);
    }
    
    public void Ingresos(){
             model =  new DefaultTableModel();
        model.addColumn("Id Producto");
        model.addColumn("Nombre");
        model.addColumn("Cantidad Total");

        jTable1.setModel(model);
        conexion c  = new conexion();
    
    String cargar[]= new String[3];

      try { 
            String select="SELECT d.idproducto, p.nombre, sum(p.precioVenta) ";
            String From= "from detalle d join producto p  on d.idproducto=p.idProducto group by idproducto";
            String sql = select+From;
            PreparedStatement ps = c.connectDb().prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            while(rs.next()){
                cargar[0]=rs.getString("d.idproducto");
                cargar[1]=rs.getString("p.nombre");
                cargar[2]=rs.getString("sum(p.precioVenta)");
                
                
                model.addRow(cargar);
            }
            ps.close();
            ps=null;
            c.desconectar();
      } catch (Exception e) {
          System.out.println("Fallo metodo");
      }
      cargar[0]="";
      cargar[1]="";
      cargar[2]="";
      
      model.addRow(cargar);
      jTable1.setModel(model);
    
    
    
    }
    
    public void Proveedores(){
        model =  new DefaultTableModel();
        model.addColumn("Id Proveedor");
        model.addColumn("Nombre");
        model.addColumn("Direccion");
        model.addColumn("Telefono");

        jTable1.setModel(model);
        conexion c  = new conexion();
    
    String cargar[]= new String[4];

      try { 
            
            String sql = "SELECT * FROM  proveedor";
            PreparedStatement ps = c.connectDb().prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            while(rs.next()){
                cargar[0]=rs.getString("idProveedor");
                cargar[1]=rs.getString("nombre");
                cargar[2]=rs.getString("direccion");
                cargar[3]=rs.getString("telefono");
                
                
                model.addRow(cargar);
            }
            ps.close();
            ps=null;
            c.desconectar();
      } catch (Exception e) {
          System.out.println("Fallo metodo");
      }
      cargar[0]="";
      cargar[1]="";
      cargar[2]="";
      cargar[3]="";
      
      model.addRow(cargar);
      jTable1.setModel(model);
    
    }
    
    public void Egresos(){
       
    
    }
    
    public void clientesMora(){
        model =  new DefaultTableModel();
        model.addColumn("Id Prestamo");
        model.addColumn("Factura");
        model.addColumn("Nombre Cliente");
        

        jTable1.setModel(model);
        conexion c  = new conexion();
    
    String cargar[]= new String[3];

      try { 
            String select = "select p.idPrestamo, f.idFactura, concat_ws ('  ',c.nombre,c.apellido)";
            String from=" from prestamo p join factura f on p.idFactura=f.idFactura join cliente c on f.idCliente = c.idCliente order by p.idPrestamo";
            String sql = select+from;
            PreparedStatement ps = c.connectDb().prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            while(rs.next()){
                cargar[0]=rs.getString("p.idPrestamo");
                cargar[1]=rs.getString("f.idFactura");
                cargar[2]=rs.getString("concat_ws ('  ',c.nombre,c.apellido)");
                
                
                
                model.addRow(cargar);
            }
          
    
      ps.close();
            ps=null;
            c.desconectar();
      } catch (Exception e) {
          System.out.println("Fallo metodo");
      }
      cargar[0]="";
      cargar[1]="";
      cargar[2]="";
      
      
      model.addRow(cargar);
      jTable1.setModel(model);
    }
    
    public void Saldo_Presona(int cliente){
            model =  new DefaultTableModel();
        model.addColumn("Id Prestamo");
        model.addColumn("Factura");
        model.addColumn("Monto");
        model.addColumn("Saldo");
        

        jTable1.setModel(model);
        conexion c  = new conexion();
    
    String cargar[]= new String[4];

      try { 
            String select = "select p.idPrestamo, f.idFactura, p.monto, p.saldo";
            String from=" from prestamo p join factura f on p.idFactura=f.idFactura where f.idCliente="+cliente+"";
            String sql = select+from;
            PreparedStatement ps = c.connectDb().prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            while(rs.next()){
                cargar[0]=rs.getString("p.idPrestamo");
                cargar[1]=rs.getString("f.idFactura");
                cargar[2]=rs.getString("p.monto");
                 cargar[3]=rs.getString("p.saldo");
                
                
                
                model.addRow(cargar);
            }
          
      
      ps.close();
            ps=null;
            c.desconectar();
      } catch (Exception e) {
          System.out.println("Fallo metodo");
      }
      cargar[0]="";
      cargar[1]="";
      cargar[2]="";
      cargar[3]="";
      
      
      model.addRow(cargar);
      jTable1.setModel(model);
     
     
    
    }
    
    public void Abonos(){}
    
    public void cargos(){
      model =  new DefaultTableModel();
        model.addColumn("Id Prestamo");
        model.addColumn("Factura");
        model.addColumn("Saldo");
         model.addColumn("Monto");
        

        jTable1.setModel(model);
        conexion c  = new conexion();
    
    String cargar[]= new String[4];

      try { 
            String select = "select p.idPrestamo, f.idFactura, p.saldo, p.monto";
            String from=" from prestamo p join factura f on p.idFactura=f.idFactura join cliente c on f.idCliente = c.idCliente order by p.idPrestamo";
            String sql = select+from;
            PreparedStatement ps = c.connectDb().prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            while(rs.next()){
                cargar[0]=rs.getString("p.idPrestamo");
                cargar[1]=rs.getString("f.idFactura");
                cargar[2]=rs.getString("p.saldo");
                cargar[3]=rs.getString("p.monto");
                
                
                
                model.addRow(cargar);
            }
          
      
      
            ps=null;
            c.desconectar();
      } catch (Exception e) {
          System.out.println("Fallo metodo");
      }
      cargar[0]="";
      cargar[1]="";
      cargar[2]="";
      cargar[3]="";
      
      
      model.addRow(cargar);
      jTable1.setModel(model);
        
    }
    
    
    public void refresh(){
       
       modeloC =(DefaultComboBoxModel)this.jComboBox2.getModel();
      
      ArrayList<ClienteC> lista= readC();
        for (int i = 0; i < lista.size(); i++) {  
           modeloC.addElement(lista.get(i));
           // System.out.println(lista.get(i));
        }
      
  }
    public ArrayList<ClienteC> readC(){
        conexion c  = new conexion();
        ArrayList<ClienteC> lista = new ArrayList<>();

          try {
                 String sql = "SELECT * FROM cliente";
                PreparedStatement ps = c.connectDb().prepareStatement(sql);
                ResultSet rs=ps.executeQuery();
                while(rs.next()){
                ClienteC p =  new  ClienteC(rs.getInt("idCliente"), rs.getString("nombre"), rs.getString("apellido"), rs.getInt("telefono"), rs.getString("direccion"));
                lista.add(p);
                }
                ps.close();
                ps=null;
                c.desconectar();
          } catch (Exception e) {
              System.out.println("Fallo metodo");
          }
          return lista;
  
  
  }
    
    public void silenciar(){
        jComboBox2.setVisible(false);
        jButton3.setVisible(false);
    }
    public void aparecer(){
    jComboBox2.setVisible(true);
        jButton3.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
